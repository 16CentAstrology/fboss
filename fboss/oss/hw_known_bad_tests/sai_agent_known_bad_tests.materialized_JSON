{
  "known_bad_tests": {
    "brcm/10.0_ea_sim_odp/10.0_ea_sim_odp/tomahawk5/simulator/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.ECMPShrinkExpandLoadBalanceFullHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.ECMPShrinkExpandLoadBalanceHalfHashCpuTraffic$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk4/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        }
    ],
    "brcm/10.2.0.0_odp/10.2.0.0_odp/tomahawk4/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/jericho2/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/jericho2/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/jericho3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/jericho3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWred$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredWithoutEcnConfig$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredDrop$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyWredThreshold$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyPerQueueWredDropStats$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnThreshold$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.*$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyCounterBumpOnL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentAclCounterTest/0.VerifyAclPriorityL4DstportHitFrontPanel$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/ramon/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/ramon/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/ramon3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        }
    ],
    "brcm/11.0_ea_dnx_odp/11.0_ea_dnx_odp/ramon3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPrbsTest.*$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk3/mono": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk3/multi_switch": [
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk4/mono": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        }
    ],
    "brcm/8.2.0.0_odp/8.2.0.0_odp/tomahawk4/multi_switch": [
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV4ToMpls.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsPhp.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6InMplsSwap.*$"
        },
        {
          "test_name_regex": "AgentLoadBalancerTestV6ToMpls.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentLoopBackTest.VerifyLoopBackSrcEqualDstMac$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/2$"
        },
        {
          "test_name_regex": "AgentMacSwLearningModeTest.VerifyNbrMacInL2Table$"
        },
        {
          "test_name_regex": "AgentMacLearningStaticEntriesTest.VerifyStaticDynamicTransformations$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentAqmTest.verifyEcnWithoutWredConfig$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.*$"
        }
    ],
    "leaba/1.42.8/1.42.8/gibraltar/mono": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.*$"
        },
        {
          "test_name_regex": "AgentRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        }
    ],
    "leaba/1.42.8/1.42.8/gibraltar/multi_switch": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentDeepPacketInspectionTest.*$"
        },
        {
          "test_name_regex": "AgentRouteCounterOverflowTest.*$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentDiagShellStressTest.stressDiagCmds$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        }
    ],
    "leaba/1.65.1/1.65.1/gibraltar/mono": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyQueueShaper$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        }
    ],
    "leaba/1.65.1/1.65.1/gibraltar/multi_switch": [
        {
          "test_name_regex": "AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].EapolToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitNeighbor$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpSolicitationToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].NdpAdvertisementToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ttl1PacketToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].JumboFramesToQueues$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRoutesToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].CpuPortIpv6LinkLocalUcastIp$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalMcastNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentDscpMarkingTest.VerifyDscpMarking$"
        },
        {
          "test_name_regex": "AgentAclConflictAndDscpQueueMappingTest.VerifyAclAndQosMapConflict$"
        },
        {
          "test_name_regex": "AgentQueuePerHostTest.*$"
        },
        {
          "test_name_regex": "AgentQueuePerHostL2Test.VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentQueuePerHostRouteTest/[01].VerifyHostToQueueMappingClassID$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest/AgentPortBandwidthParamTest.VerifyPortRateTraffic/0$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifySwToHw.*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwToSw.*$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifyCallbacksOnMacEntryChange$"
        },
        {
          "test_name_regex": "warm_boot.AgentMacSwLearningModeTest.VerifySwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyMacLearningScale$"
        },
        {
          "test_name_regex": "AgentPacketSendTest.PortTxEnableTest$"
        },
        {
          "test_name_regex": "AgentWatermarkTest.VerifyQueueWatermarkAccuracy$"
        },
        {
          "test_name_regex": "AgentPortBandwidthTest.VerifyQueueShaper$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DstIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].Ipv6LinkLocalUcastIpNetworkControlDscpToHighPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].L3MTUErrorToLowPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].DhcpPacketToMidPriQ$"
        },
        {
          "test_name_regex": "AgentCoppTest/0.VerifyCoppPpsLowPri$"
        },
        {
          "test_name_regex": "AgentOlympicQosSchedulerTest.VerifyWRRForOlympicToOlympicV2$"
        },
        {
          "test_name_regex": "AgentOlympicV2SPToWRRQosSchedulerTest.VerifyOlympicV2AllSPTrafficToWRR$"
        },
        {
          "test_name_regex": "AgentUdfAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletAclCounterTest.*$"
        },
        {
          "test_name_regex": "AgentCoppQosTest.HighVsLowerPriorityCpuQueueTrafficPrioritization$"
        },
        {
          "test_name_regex": "AgentCoppQueueStuckTest.CpuQueueHighRateTraffic$"
        },
        {
          "test_name_regex": "AgentPacketFloodTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningMacMoveTest.*$"
        },
        {
          "test_name_regex": "AgentMacLearningBatchEntriesTest.*$"
        },
        {
          "test_name_regex": "AgentFlowletSwitchingTest.*$"
        },
        {
          "test_name_regex": "AgentPacketSendReceiveLagTest.LacpPacketReceiveSrcPort$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorOnTrunkTestV[46].*$"
        },
        {
          "test_name_regex": "AgentSflowMirrorTruncateTestV[46].*$"
        },
        {
          "test_name_regex": "AgentIngressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclSpanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressAclErspanMirroringTest/[01].*$"
        },
        {
          "test_name_regex": "AgentIngressEgressPortErspanMirroringTruncateTest/[01].*$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwAgingForTrunk$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForPort$"
        },
        {
          "test_name_regex": "AgentMacLearningTest.VerifyHwLearningForTrunk$"
        },
        {
          "test_name_regex": "AgentCoppTest/[01].UnresolvedRouteNextHopToLowPriQueue$"
        },
        {
          "test_name_regex": "AgentRouteOverflowTest.overflowRoutes$"
        },
        {
          "test_name_regex": "warm_boot.AgentInNullRouteDiscardsCounterTest.nullRouteHit$"
        },
        {
          "test_name_regex": "warm_boot.AgentRouteCounterOverflowTest.overflowRouteCounters$"
        }
    ]
  }
}